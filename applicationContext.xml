<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
			http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.1.xsd
			http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util-3.2.xsd
            http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config proxy-target-class="true" />
	
<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->
	<mvc:annotation-driven />

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller and @Service and @Component. Make sure to set the 
		correct base-package -->
	<context:component-scan base-package="com.justbudge" />
	
	<!-- Load remaining configuration -->
	<import resource="locale-context.xml" />

	<bean id="propertyConfigurer" class="com.justbudge.util.PropertiesUtil">
		<property name="locations">
			<list>
				<value>classpath:database.properties</value>
				<value>classpath:common-justbudge.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>
	
	<bean id="viewProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    	<property name="locations">
        	<list><value>classpath:common-justbudge.properties</value></list>
    	</property>
	</bean>
	
	<!-- declaring Spring JDBC datasource -->	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
  		<property name="driverClassName" value="${jdbc.driverClassName}" /> 
  		<property name="url" value="${jdbc.url}" />
  		<property name="username" value="${jdbc.username}" />  
  		<property name="password" value="${jdbc.password}" />  
 	</bean>
 	
 	<bean id="BaseDaoImpl" class="com.justbudge.dao.base.BaseDaoImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    
    <bean class="com.justbudge.util.JBAuthenticationProvider" id="jbAuthenticationProvider"/> 
</beans>
